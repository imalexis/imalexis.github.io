<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/">
    <channel>
        <title>My Site Blog</title>
        <link>https://imalexis.github.io/blog</link>
        <description>My Site Blog</description>
        <lastBuildDate>Thu, 01 Feb 2024 05:29:20 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>https://github.com/jpmonette/feed</generator>
        <language>en</language>
        <item>
            <title><![CDATA[Fundamental Concepts in Programming - Expressions, Predicates, and Statement]]></title>
            <link>https://imalexis.github.io/blog/programming-concepts-ExPreStmt</link>
            <guid>https://imalexis.github.io/blog/programming-concepts-ExPreStmt</guid>
            <pubDate>Thu, 01 Feb 2024 05:29:20 GMT</pubDate>
            <description><![CDATA[In computer science language, "expression," "predicate," and "statement" are terms often used to describe different constructs in programming languages. Here's a brief explanation of each:]]></description>
            <content:encoded><![CDATA[<p>In computer science language, "expression," "predicate," and "statement" are terms often used to describe different constructs in programming languages. Here's a brief explanation of each:</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="expression">Expression:<a href="https://imalexis.github.io/blog/programming-concepts-ExPreStmt#expression" class="hash-link" aria-label="Direct link to Expression:" title="Direct link to Expression:">​</a></h2>
<p>An expression is a combination of values, variables, operators, and function calls that can be evaluated to <strong>produce a single value</strong>.
Expressions can be simple, like a literal value or a variable, or complex, involving arithmetic or logical operations.
Examples: <code>5 + 3</code>, <code>x * y</code>, <code>isReady &amp;&amp; hasPermission</code>,<code> Math.sqrt(16)</code>.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="predicate">Predicate:<a href="https://imalexis.github.io/blog/programming-concepts-ExPreStmt#predicate" class="hash-link" aria-label="Direct link to Predicate:" title="Direct link to Predicate:">​</a></h2>
<p>A predicate is **a specific type of expression ** that <strong>evaluates to either true or false</strong> (also produce a single value).
Predicates are commonly used in conditional statements and loops to make decisions based on whether a condition is true or false.
Examples: x &gt; 0 (evaluates to true or false based on whether x is greater than 0), isReady &amp;&amp; hasPermission, name === "John".</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="statement">Statement:<a href="https://imalexis.github.io/blog/programming-concepts-ExPreStmt#statement" class="hash-link" aria-label="Direct link to Statement:" title="Direct link to Statement:">​</a></h2>
<p>A statement is a complete instruction that performs a specific action.
Unlike expressions, <strong>statements don't necessarily produce a value</strong>. They are executed for their side effects.
Examples: variable declarations (let x = 5;), control flow statements (if, else, for, while), function declarations (function myFunction() <!-- -->).</p>
<p>an expression is a combination of values and operators that evaluates to a single value, a predicate is a specific type of expression that evaluates to true or false, and a statement is a complete instruction that performs an action. In many programming languages, expressions can be used as part of statements, and predicates are often used to control the flow of statements.</p>]]></content:encoded>
            <category>programming-concepts</category>
        </item>
        <item>
            <title><![CDATA[JavaScript Algorithmic Mastery:Quick and Essential Syntax for Problem Solving]]></title>
            <link>https://imalexis.github.io/blog/JS-algorithmic-mastery</link>
            <guid>https://imalexis.github.io/blog/JS-algorithmic-mastery</guid>
            <pubDate>Thu, 25 Jan 2024 02:33:07 GMT</pubDate>
            <description><![CDATA[Welcome to the world of algorithmic problem-solving with JavaScript! Whether you're a beginner or an experienced developer, mastering the fundamental syntax is crucial for tackling coding challenges effectively. In this guide, we'll explore key JavaScript syntax topics that are commonly used in algorithmic problem-solving.]]></description>
            <content:encoded><![CDATA[<p>Welcome to the world of algorithmic problem-solving with JavaScript! Whether you're a beginner or an experienced developer, mastering the fundamental syntax is crucial for tackling coding challenges effectively. In this guide, we'll explore key JavaScript syntax topics that are commonly used in algorithmic problem-solving.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="1-variables-and-data-types">1. Variables and Data Types<a href="https://imalexis.github.io/blog/JS-algorithmic-mastery#1-variables-and-data-types" class="hash-link" aria-label="Direct link to 1. Variables and Data Types" title="Direct link to 1. Variables and Data Types">​</a></h2>
<p>Understanding how to declare variables using <code>let</code>, <code>const</code>, and <code>var</code>, and grasping the basics of data types like strings, numbers, and booleans lays a solid foundation for your coding journey.</p>
<div class="language-javascript codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-javascript codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">let</span><span class="token plain"> age </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">25</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> name </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"John"</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">var</span><span class="token plain"> isStudent </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">true</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="2-arrays-and-strings">2. Arrays and Strings<a href="https://imalexis.github.io/blog/JS-algorithmic-mastery#2-arrays-and-strings" class="hash-link" aria-label="Direct link to 2. Arrays and Strings" title="Direct link to 2. Arrays and Strings">​</a></h2>
<p>Arrays and strings are essential data structures. Learn how to manipulate arrays using methods like <code>push()</code>, <code>pop()</code>, <code>shift()</code>, and work with string methods such as <code>charAt()</code>, <code>substring()</code>, and <code>indexOf()</code>.</p>
<div class="language-javascript codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-javascript codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">let</span><span class="token plain"> numbers </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">2</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">3</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">4</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">5</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">numbers</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">push</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">6</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">let</span><span class="token plain"> greeting </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"Hello, World!"</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token console class-name">console</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">log</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">greeting</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">substring</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">5</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic">// Output: Hello</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="3-control-flow">3. Control Flow<a href="https://imalexis.github.io/blog/JS-algorithmic-mastery#3-control-flow" class="hash-link" aria-label="Direct link to 3. Control Flow" title="Direct link to 3. Control Flow">​</a></h2>
<p>Mastering control flow constructs such as <code>if</code>, <code>else if</code>, and <code>else</code>, as well as loops like <code>for</code> and <code>while</code>, is crucial for making decisions and iterating through data.</p>
<div class="language-javascript codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-javascript codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">let</span><span class="token plain"> score </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">85</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword control-flow" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">score </span><span class="token operator" style="color:#393A34">&gt;=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">90</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token console class-name">console</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">log</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"A"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword control-flow" style="color:#00009f">else</span><span class="token plain"> </span><span class="token keyword control-flow" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">score </span><span class="token operator" style="color:#393A34">&gt;=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">80</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token console class-name">console</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">log</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"B"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword control-flow" style="color:#00009f">else</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token console class-name">console</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">log</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"C"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="4-functions">4. Functions<a href="https://imalexis.github.io/blog/JS-algorithmic-mastery#4-functions" class="hash-link" aria-label="Direct link to 4. Functions" title="Direct link to 4. Functions">​</a></h2>
<p>Functions are the building blocks of JavaScript. Learn to define functions using the <code>function</code> keyword, handle parameters, and use return statements effectively.</p>
<div class="language-javascript codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-javascript codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">add</span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter">a</span><span class="token parameter punctuation" style="color:#393A34">,</span><span class="token parameter"> b</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword control-flow" style="color:#00009f">return</span><span class="token plain"> a </span><span class="token operator" style="color:#393A34">+</span><span class="token plain"> b</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">let</span><span class="token plain"> result </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">add</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">3</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">7</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token console class-name">console</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">log</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">result</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic">// Output: 10</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="5-objects">5. Objects<a href="https://imalexis.github.io/blog/JS-algorithmic-mastery#5-objects" class="hash-link" aria-label="Direct link to 5. Objects" title="Direct link to 5. Objects">​</a></h2>
<p>Objects are powerful in JavaScript. Create and manipulate objects, access their properties, and use methods.</p>
<div class="language-javascript codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-javascript codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">let</span><span class="token plain"> person </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token literal-property property" style="color:#36acaa">name</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"Alice"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token literal-property property" style="color:#36acaa">age</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">30</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token function-variable function" style="color:#d73a49">greet</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">function</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token console class-name">console</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">log</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"Hello, "</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">+</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">name</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">+</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"!"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">person</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">greet</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic">// Output: Hello, Alice!</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>(Continue with other topics...)</p>
<p>This guide provides a snapshot of essential JavaScript syntax for algorithmic problem-solving. Stay tuned for more in-depth explanations and examples in upcoming articles. Happy coding! 🚀</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="more">More<a href="https://imalexis.github.io/blog/JS-algorithmic-mastery#more" class="hash-link" aria-label="Direct link to More" title="Direct link to More">​</a></h2>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="get-the-maximum-of-an-array">Get the maximum of an array<a href="https://imalexis.github.io/blog/JS-algorithmic-mastery#get-the-maximum-of-an-array" class="hash-link" aria-label="Direct link to Get the maximum of an array" title="Direct link to Get the maximum of an array">​</a></h2>
<p>spread syntax:</p>
<div class="language-javascript codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-javascript codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> arr </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">2</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">3</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> max </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token known-class-name class-name">Math</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">max</span><span class="token punctuation" style="color:#393A34">(</span><span class="token spread operator" style="color:#393A34">...</span><span class="token plain">arr</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="get-last-element-in-an-array">Get Last Element in an Array<a href="https://imalexis.github.io/blog/JS-algorithmic-mastery#get-last-element-in-an-array" class="hash-link" aria-label="Direct link to Get Last Element in an Array" title="Direct link to Get Last Element in an Array">​</a></h2>
<p>The slice() method returns specific elements from an array, as a new array object. This method selects the elements starting at the given start index and ends at the given end index excluding the element at the end index. The slice() method does not modify the existing array. Providing one index value returns the element at that position &amp; a negative index value calculates the index from the end of the array.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="clear-an-array-empty-array">Clear an array (empty Array)<a href="https://imalexis.github.io/blog/JS-algorithmic-mastery#clear-an-array-empty-array" class="hash-link" aria-label="Direct link to Clear an array (empty Array)" title="Direct link to Clear an array (empty Array)">​</a></h2>
<ol>
<li>
<p>By modifying the length property
If the modified length is smaller than the original length, excess values will be removed.</p>
<div class="language-js codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-js codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> array </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">2</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">3</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">array</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">length</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">2</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token console class-name">console</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">log</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">array</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">// [1, 2]</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>Because the new length is smaller than the original, the excess value (3, in this case) is removed.</p>
<p>If the new length is larger than the original length, the array will be filled with undefined values to make up for the new length.</p>
<p>So set the length to 0, the array will be empty.</p>
<div class="language-js codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-js codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> array </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">2</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">3</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">array</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">length</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token console class-name">console</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">log</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">array</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">// []</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
</li>
<li>
<p>Or reassign a new value (an empty array) to a variable that initially has a non-empty array assigned to it.</p>
</li>
</ol>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[ezbiz]]></title>
            <link>https://imalexis.github.io/blog/ezbiz</link>
            <guid>https://imalexis.github.io/blog/ezbiz</guid>
            <pubDate>Wed, 24 Jan 2024 09:02:31 GMT</pubDate>
            <description><![CDATA[Question & QuestionResponse]]></description>
            <content:encoded><![CDATA[<h2 class="anchor anchorWithStickyNavbar_LWe7" id="question--questionresponse">Question &amp; QuestionResponse<a href="https://imalexis.github.io/blog/ezbiz#question--questionresponse" class="hash-link" aria-label="Direct link to Question &amp; QuestionResponse" title="Direct link to Question &amp; QuestionResponse">​</a></h2>
<p>O2M
Each question has many questionResponses, and a questionResponse related to one question.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="forminstance--questionresponse">FormInstance &amp; QuestionResponse<a href="https://imalexis.github.io/blog/ezbiz#forminstance--questionresponse" class="hash-link" aria-label="Direct link to FormInstance &amp; QuestionResponse" title="Direct link to FormInstance &amp; QuestionResponse">​</a></h2>
<p>O2M
Each formInstance has many questionResponses, and a questionResponse related to one formInstance.</p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Built-in React Hooks]]></title>
            <link>https://imalexis.github.io/blog/react-hooks</link>
            <guid>https://imalexis.github.io/blog/react-hooks</guid>
            <pubDate>Tue, 23 Jan 2024 13:00:27 GMT</pubDate>
            <description><![CDATA[State Hooks]]></description>
            <content:encoded><![CDATA[<h2 class="anchor anchorWithStickyNavbar_LWe7" id="state-hooks">State Hooks<a href="https://imalexis.github.io/blog/react-hooks#state-hooks" class="hash-link" aria-label="Direct link to State Hooks" title="Direct link to State Hooks">​</a></h2>
<ul>
<li>useState: declares a state variable tthat we can update directly.</li>
<li>useReducer: declares a state variable with the update logic inside a reducer function.</li>
</ul>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="context-hooks">Context Hooks<a href="https://imalexis.github.io/blog/react-hooks#context-hooks" class="hash-link" aria-label="Direct link to Context Hooks" title="Direct link to Context Hooks">​</a></h2>
<p>Context lets a component receive information from distant parents without passing it as props.</p>
<ul>
<li>useContext: reads and subscribes to a content.</li>
</ul>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="ref-hooks">Ref Hooks<a href="https://imalexis.github.io/blog/react-hooks#ref-hooks" class="hash-link" aria-label="Direct link to Ref Hooks" title="Direct link to Ref Hooks">​</a></h2>
<p>Refs let a component hold soe information that isn't used for rendering, like a DOM node or timeout ID. Refs are an "escape hatch" from the react paradigm. They are useful when you need to work with non-React systems, such as the built-in browser APIs.</p>
<ul>
<li>useRef: declares a ref. We can hold any value in it, but most often it's used to hold a DOM node.</li>
</ul>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="effect-hooks">Effect Hooks<a href="https://imalexis.github.io/blog/react-hooks#effect-hooks" class="hash-link" aria-label="Direct link to Effect Hooks" title="Direct link to Effect Hooks">​</a></h2>
<p>Effects let a component connect to and synchronize with external systems. This includes dealing with network, browser DOM, animationm widgets written using a different UI library, and other non-React code.</p>
<p>Effects are an “escape hatch” from the React paradigm. Don’t use Effects to orchestrate the data flow of your application. If you’re not interacting with an external system, you might not need an Effect.</p>
<ul>
<li>useEffect: connects a component to an external system.</li>
<li>useLayoutEffect: fires before the browser repaints the screen.</li>
<li>useInsertionEffect: fires before React makes changes to the DOM. Libraries can insert dynamic CSS here.</li>
</ul>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="performance-hooks">Performance Hooks<a href="https://imalexis.github.io/blog/react-hooks#performance-hooks" class="hash-link" aria-label="Direct link to Performance Hooks" title="Direct link to Performance Hooks">​</a></h2>
<p>A common way to optimize re-renderinng performance is to skip uneccessary work.</p>
<ul>
<li>useMemo: lets you cache the result of an expensive calculation.</li>
<li>useCallback: lets you cache a function definition before passing it down to an optimized component.</li>
<li>useTransition: lets you mark a state transition as non-blocking and allow other updates to interrupt it.</li>
<li>useDeferredValue: lets you defer updating a non-critical part of the UI and let parts update first.</li>
</ul>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="resource-hooks">Resource Hooks<a href="https://imalexis.github.io/blog/react-hooks#resource-hooks" class="hash-link" aria-label="Direct link to Resource Hooks" title="Direct link to Resource Hooks">​</a></h2>
<p>Resources can be accessed by a component without having them as a part of their state.</p>
<ul>
<li>use: lets you read the value of a resource like a Promise or context.</li>
</ul>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="other-hooks">Other Hooks<a href="https://imalexis.github.io/blog/react-hooks#other-hooks" class="hash-link" aria-label="Direct link to Other Hooks" title="Direct link to Other Hooks">​</a></h2>
<p>Commonly useful to library authors.</p>
<ul>
<li>useDefaultValue</li>
<li>useId</li>
<li>useSyncExternalStore</li>
</ul>]]></content:encoded>
            <category>react</category>
            <category>hook</category>
        </item>
        <item>
            <title><![CDATA[How to design customized rendering]]></title>
            <link>https://imalexis.github.io/blog/design-customized-rendering</link>
            <guid>https://imalexis.github.io/blog/design-customized-rendering</guid>
            <pubDate>Thu, 18 Jan 2024 13:51:21 GMT</pubDate>
            <description><![CDATA[Customized rendering refers to the ability to create and control the appearance and behavior of components in a way that goes beyond the default or standard rendering provided by a library or framework.]]></description>
            <content:encoded><![CDATA[<p>Customized rendering refers to the ability to create and control the appearance and behavior of components in a way that goes beyond the default or standard rendering provided by a library or framework.
Customized rendering is a powerful concept that allows you to tailor your application to specific needs and design considerations.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="1-component-structure-and-style">1. Component Structure and Style<a href="https://imalexis.github.io/blog/design-customized-rendering#1-component-structure-and-style" class="hash-link" aria-label="Direct link to 1. Component Structure and Style" title="Direct link to 1. Component Structure and Style">​</a></h2>
<p>We can customize the structure and style of our components to align with your application's design.
This involves writing custom HTML, CSS, or JSX to define how the component should look.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="2-dynamic-content-and-data-binding">2. Dynamic Content and Data Binding<a href="https://imalexis.github.io/blog/design-customized-rendering#2-dynamic-content-and-data-binding" class="hash-link" aria-label="Direct link to 2. Dynamic Content and Data Binding" title="Direct link to 2. Dynamic Content and Data Binding">​</a></h2>
<p>Customized rendering allow us to handle dynamic content data binding.
We can create components that accept dynamic data as props and render it accordingly.
This can involve conditional rendering, iterating over data arrays, or using other techniques to dynamically display content</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="3-event-handling">3. Event Handling<a href="https://imalexis.github.io/blog/design-customized-rendering#3-event-handling" class="hash-link" aria-label="Direct link to 3. Event Handling" title="Direct link to 3. Event Handling">​</a></h2>
<p>Customize the how the components respond ti user interactions by handling events.
This includes defining custom event handler and specifing how the component should behave when certain actions occur.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="4-conditional-rendering">4. Conditional Rendering<a href="https://imalexis.github.io/blog/design-customized-rendering#4-conditional-rendering" class="hash-link" aria-label="Direct link to 4. Conditional Rendering" title="Direct link to 4. Conditional Rendering">​</a></h2>
<p>Customize the rendering of components based on certain conditions.
E.g., show or hide specific elements, change styles, or render alternaive content based on the state or props of a component.</p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[REST API vs GraphQL]]></title>
            <link>https://imalexis.github.io/blog/difference-between-graphql-and-rest</link>
            <guid>https://imalexis.github.io/blog/difference-between-graphql-and-rest</guid>
            <pubDate>Thu, 18 Jan 2024 08:53:36 GMT</pubDate>
        </item>
        <item>
            <title><![CDATA[aws]]></title>
            <link>https://imalexis.github.io/blog/aws-service</link>
            <guid>https://imalexis.github.io/blog/aws-service</guid>
            <pubDate>Thu, 18 Jan 2024 08:20:33 GMT</pubDate>
            <description><![CDATA[- Amazon S3 can be used to store and retrieve any type of data. By default all Amazon S3 resources are private. Only the resource owner can optionally grant access permissions to others by writting an access policy.]]></description>
            <content:encoded><![CDATA[<ul>
<li>
<p>Amazon S3 can be used to store and retrieve any type of data. By default all Amazon S3 resources are private. Only the resource owner can optionally grant access permissions to others by writting an access policy.</p>
</li>
<li>
<p>Amazon EC2 uses public key cryptography to encrypt and decript login information. Public key cruptography uses a public key to encrypt a piece of data, and then the recipient uses their private key to decrypt the data. The public and private keys are known as a key pair.</p>
</li>
</ul>
<p>A virtual private cloud (VPC) is a virtusl network dedicated to an AWS account. While a VPC resides in an AWS Region, a subnet must reside within a single Availability Zone.</p>
<ul>
<li>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="change-the-amazon-ec2-instance-type">Change the Amazon EC2 instance type:<a href="https://imalexis.github.io/blog/aws-service#change-the-amazon-ec2-instance-type" class="hash-link" aria-label="Direct link to Change the Amazon EC2 instance type:" title="Direct link to Change the Amazon EC2 instance type:">​</a></h3>
</li>
</ul>
<p>We must stop your Amazon EBS-backed <strong>instance</strong> before we can change its instance type. Plan for downtime while our instance is stopped. Stopping the instance and changing its instance type might take a variable amount of time depending on our application's startup scripts.</p>]]></content:encoded>
            <category>cloud</category>
        </item>
        <item>
            <title><![CDATA[Relay - Mutation]]></title>
            <link>https://imalexis.github.io/blog/relay-mutation</link>
            <guid>https://imalexis.github.io/blog/relay-mutation</guid>
            <pubDate>Thu, 18 Jan 2024 08:20:33 GMT</pubDate>
            <description><![CDATA[general steps for creating a new object using Relay Mutations:]]></description>
            <content:encoded><![CDATA[<p>general steps for creating a new object using Relay Mutations:</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="1-define-a-graphql-mutation">1. Define a GraphQL Mutation<a href="https://imalexis.github.io/blog/relay-mutation#1-define-a-graphql-mutation" class="hash-link" aria-label="Direct link to 1. Define a GraphQL Mutation" title="Direct link to 1. Define a GraphQL Mutation">​</a></h3>
<p>Create a GraphQL mutation that represents the action of creating a new object. This mutation should include input fields representing the data needed to create the object.</p>
<div class="language-js codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-js codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">   </span><span class="token comment" style="color:#999988;font-style:italic">// Example GraphQL mutation</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> mutation </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> graphql</span><span class="token template-string template-punctuation string" style="color:#e3116c">`</span><span class="token template-string graphql language-graphql"></span><br></span><span class="token-line" style="color:#393A34"><span class="token template-string graphql language-graphql">    </span><span class="token template-string graphql language-graphql keyword" style="color:#00009f">mutation</span><span class="token template-string graphql language-graphql"> </span><span class="token template-string graphql language-graphql definition-mutation function" style="color:#d73a49">ObjectMutation</span><span class="token template-string graphql language-graphql punctuation" style="color:#393A34">(</span><span class="token template-string graphql language-graphql variable variable-input" style="color:#36acaa">$input</span><span class="token template-string graphql language-graphql punctuation" style="color:#393A34">:</span><span class="token template-string graphql language-graphql"> </span><span class="token template-string graphql language-graphql atom-input class-name">CreateObjectInput</span><span class="token template-string graphql language-graphql operator" style="color:#393A34">!</span><span class="token template-string graphql language-graphql punctuation" style="color:#393A34">)</span><span class="token template-string graphql language-graphql"> </span><span class="token template-string graphql language-graphql punctuation" style="color:#393A34">{</span><span class="token template-string graphql language-graphql"></span><br></span><span class="token-line" style="color:#393A34"><span class="token template-string graphql language-graphql">    </span><span class="token template-string graphql language-graphql property-query property-mutation">createObject</span><span class="token template-string graphql language-graphql punctuation" style="color:#393A34">(</span><span class="token template-string graphql language-graphql attr-name" style="color:#00a4db">input</span><span class="token template-string graphql language-graphql punctuation" style="color:#393A34">:</span><span class="token template-string graphql language-graphql"> </span><span class="token template-string graphql language-graphql variable variable-input" style="color:#36acaa">$input</span><span class="token template-string graphql language-graphql punctuation" style="color:#393A34">)</span><span class="token template-string graphql language-graphql"> </span><span class="token template-string graphql language-graphql punctuation" style="color:#393A34">{</span><span class="token template-string graphql language-graphql"></span><br></span><span class="token-line" style="color:#393A34"><span class="token template-string graphql language-graphql">    </span><span class="token template-string graphql language-graphql object">object</span><span class="token template-string graphql language-graphql"> </span><span class="token template-string graphql language-graphql punctuation" style="color:#393A34">{</span><span class="token template-string graphql language-graphql"></span><br></span><span class="token-line" style="color:#393A34"><span class="token template-string graphql language-graphql">      </span><span class="token template-string graphql language-graphql property" style="color:#36acaa">id</span><span class="token template-string graphql language-graphql"></span><br></span><span class="token-line" style="color:#393A34"><span class="token template-string graphql language-graphql">      </span><span class="token template-string graphql language-graphql property" style="color:#36acaa">name</span><span class="token template-string graphql language-graphql"></span><br></span><span class="token-line" style="color:#393A34"><span class="token template-string graphql language-graphql">      // </span><span class="token template-string graphql language-graphql property" style="color:#36acaa">other</span><span class="token template-string graphql language-graphql"> </span><span class="token template-string graphql language-graphql property" style="color:#36acaa">fields</span><span class="token template-string graphql language-graphql"></span><br></span><span class="token-line" style="color:#393A34"><span class="token template-string graphql language-graphql">    </span><span class="token template-string graphql language-graphql punctuation" style="color:#393A34">}</span><span class="token template-string graphql language-graphql"></span><br></span><span class="token-line" style="color:#393A34"><span class="token template-string graphql language-graphql">  </span><span class="token template-string graphql language-graphql punctuation" style="color:#393A34">}</span><span class="token template-string graphql language-graphql"></span><br></span><span class="token-line" style="color:#393A34"><span class="token template-string graphql language-graphql"></span><span class="token template-string graphql language-graphql punctuation" style="color:#393A34">}</span><span class="token template-string graphql language-graphql"></span><br></span><span class="token-line" style="color:#393A34"><span class="token template-string graphql language-graphql"></span><span class="token template-string template-punctuation string" style="color:#e3116c">`</span><span class="token plain"> </span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="2-create-a-relay-mutation">2. Create a Relay Mutation<a href="https://imalexis.github.io/blog/relay-mutation#2-create-a-relay-mutation" class="hash-link" aria-label="Direct link to 2. Create a Relay Mutation" title="Direct link to 2. Create a Relay Mutation">​</a></h3>
<p>creare the commit method</p>
<div class="language-js codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-js codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">commit</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> useMutation</span><span class="token operator" style="color:#393A34">&lt;</span><span class="token maybe-class-name">CreateObjectMutation</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">mutation</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>CreateObjectMutation: the type of mutation</p>
<p>mutation: the definition of mutation</p>
<br>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="3-invoke-commit">3. invoke commit<a href="https://imalexis.github.io/blog/relay-mutation#3-invoke-commit" class="hash-link" aria-label="Direct link to 3. invoke commit" title="Direct link to 3. invoke commit">​</a></h3>
<p>the new object to be create should be place in the "input" property of "variable". "variable" is a property of the big Object we commit.</p>
<div class="language-js codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-js codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token operator" style="color:#393A34">&lt;</span><span class="token maybe-class-name">Button</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        type</span><span class="token operator" style="color:#393A34">=</span><span class="token string" style="color:#e3116c">"primary"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        onClick</span><span class="token operator" style="color:#393A34">=</span><span class="token punctuation" style="color:#393A34">{</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token arrow operator" style="color:#393A34">=&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          </span><span class="token function" style="color:#d73a49">commit</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token literal-property property" style="color:#36acaa">variables</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> </span><span class="token literal-property property" style="color:#36acaa">input</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> </span><span class="token literal-property property" style="color:#36acaa">createdBy</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token literal-property property" style="color:#36acaa">name</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> title </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token function-variable function" style="color:#d73a49">onCompleted</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter">response</span><span class="token parameter punctuation" style="color:#393A34">,</span><span class="token parameter"> errors</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token arrow operator" style="color:#393A34">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">              </span><span class="token function" style="color:#d73a49">navigate</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"/admin/forms"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">/</span><span class="token operator" style="color:#393A34">&gt;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<div class="theme-admonition theme-admonition-tip admonition_xJq3 alert alert--success"><div class="admonitionHeading_Gvgb"><span class="admonitionIcon_Rf37"><svg viewBox="0 0 12 16"><path fill-rule="evenodd" d="M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"></path></svg></span>tip</div><div class="admonitionContent_BuS1"><p>When developing a React app with Relay, you often use the babel-plugin-relay/macro package to enable the graphql template literal tag for your GraphQL queries. This allows you to embed GraphQL queries directly into your JavaScript or TypeScript files.</p><p>In Relay applications, when using the babel-plugin-relay/macro, you import the graphql template tag from the babel-plugin-relay/macro package instead of the generic graphql package. This is because the graphql template tag provided by babel-plugin-relay/macro is a special version tailored for Relay's use and is capable of performing ahead-of-time (AOT) compilation.</p><p>When you use <code>import { graphql } from "babel-plugin-relay/macro";</code>, the Babel plugin processes the GraphQL queries at build time, generating optimized artifacts that are used by Relay to make more efficient GraphQL requests.</p><p>By using the babel-plugin-relay/macro, you get the benefits of AOT compilation, which includes:</p><p>Faster Runtime: The Relay compiler processes the queries at build time, so the runtime environment doesn't need to perform complex parsing and transformations on GraphQL queries.</p><p>Smaller Bundle Sizes: AOT compilation allows the Relay compiler to generate optimized artifacts, resulting in smaller bundle sizes for your application.</p><p>Static Validation: Queries are statically validated during the build process, catching errors early in development rather than at runtime.</p><p>Using the generic graphql package wouldn't provide these benefits, as it doesn't have the Relay-specific optimizations implemented by the babel-plugin-relay/macro. Therefore, when working with Relay, it's recommended to import graphql from babel-plugin-relay/macro for an improved development and runtime experience.</p></div></div>]]></content:encoded>
            <category>graphql</category>
            <category>Relay</category>
        </item>
        <item>
            <title><![CDATA[React Router]]></title>
            <link>https://imalexis.github.io/blog/react-router</link>
            <guid>https://imalexis.github.io/blog/react-router</guid>
            <pubDate>Tue, 09 Jan 2024 15:49:03 GMT</pubDate>
            <category>graphql</category>
            <category>Relay</category>
        </item>
        <item>
            <title><![CDATA[suspense/react-suspense]]></title>
            <link>https://imalexis.github.io/blog/suspense/react-suspense</link>
            <guid>https://imalexis.github.io/blog/suspense/react-suspense</guid>
            <pubDate>Tue, 09 Jan 2024 15:49:03 GMT</pubDate>
            <description><![CDATA[---]]></description>
            <content:encoded><![CDATA[<hr>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="slug-react-suspensetitle--react-suspensetags-react">slug: react-suspense
title:  react Suspense
tags: [React]<a href="https://imalexis.github.io/blog/suspense/react-suspense#slug-react-suspensetitle--react-suspensetags-react" class="hash-link" aria-label="Direct link to slug: react-suspense
title:  react Suspense
tags: [React]" title="Direct link to slug: react-suspense
title:  react Suspense
tags: [React]">​</a></h2>
<div class="tabs-container tabList__CuJ"><ul role="tablist" aria-orientation="horizontal" class="tabs"><li role="tab" tabindex="0" aria-selected="true" class="tabs__item tabItem_LNqP tabs__item--active">apple</li><li role="tab" tabindex="-1" aria-selected="false" class="tabs__item tabItem_LNqP">orange</li></ul><div class="margin-top--md"><div role="tabpanel" class="tabItem_Ymn6"><p>hello apple</p></div><div role="tabpanel" class="tabItem_Ymn6" hidden=""><p>hello orange</p></div></div></div>
<h1>&lt;Suspense&gt;</h1>
<p>&lt;Suspense&gt; component is part of <em>React's</em> Concurrent Mode feature to improve the user experience by making it more respective and resilient.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="purpose">Purpose<a href="https://imalexis.github.io/blog/suspense/react-suspense#purpose" class="hash-link" aria-label="Direct link to Purpose" title="Direct link to Purpose">​</a></h2>
<p>The primary purpose of the &lt;Suspense&gt; component is to handle asynchronous operations, such as data fetching or lazy loading of components, in a more declarative way. It allows you to "suspend" rendering until some condition is met, typically until data is ready.</p>
<div class="language-js codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-js codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword module" style="color:#00009f">import</span><span class="token plain"> </span><span class="token imports maybe-class-name">React</span><span class="token imports punctuation" style="color:#393A34">,</span><span class="token imports"> </span><span class="token imports punctuation" style="color:#393A34">{</span><span class="token imports"> </span><span class="token imports maybe-class-name">Suspense</span><span class="token imports"> </span><span class="token imports punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword module" style="color:#00009f">from</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'react'</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> </span><span class="token maybe-class-name">MyComponent</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token maybe-class-name">React</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">lazy</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token arrow operator" style="color:#393A34">=&gt;</span><span class="token plain"> </span><span class="token keyword module" style="color:#00009f">import</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'./MyComponent'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token function maybe-class-name" style="color:#d73a49">App</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword control-flow" style="color:#00009f">return</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token operator" style="color:#393A34">&lt;</span><span class="token maybe-class-name">Suspense</span><span class="token plain"> fallback</span><span class="token operator" style="color:#393A34">=</span><span class="token punctuation" style="color:#393A34">{</span><span class="token operator" style="color:#393A34">&lt;</span><span class="token plain">div</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token maybe-class-name">Loading</span><span class="token spread operator" style="color:#393A34">...</span><span class="token operator" style="color:#393A34">&lt;</span><span class="token operator" style="color:#393A34">/</span><span class="token plain">div</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token punctuation" style="color:#393A34">}</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token operator" style="color:#393A34">&lt;</span><span class="token maybe-class-name">MyComponent</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">/</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token operator" style="color:#393A34">&lt;</span><span class="token operator" style="color:#393A34">/</span><span class="token maybe-class-name">Suspense</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<div class="theme-admonition theme-admonition-tip admonition_xJq3 alert alert--success"><div class="admonitionHeading_Gvgb"><span class="admonitionIcon_Rf37"><svg viewBox="0 0 12 16"><path fill-rule="evenodd" d="M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"></path></svg></span>tip</div><div class="admonitionContent_BuS1"><p>When you are using Relay's <span style="background-color:#2C6F63;border-radius:2px;border:1px solid black;color:#fff;padding:0.2rem">useLazyQuery</span> , the official document recommend wrap it with a <span style="background-color:#2C6F63;border-radius:2px;border:1px solid black;color:#fff;padding:0.2rem">Suspense</span> Component for better user experience.</p></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="common-usage">Common usage<a href="https://imalexis.github.io/blog/suspense/react-suspense#common-usage" class="hash-link" aria-label="Direct link to Common usage" title="Direct link to Common usage">​</a></h2>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="displaying-a-fallback-while-content-is-loading">Displaying a fallback while content is loading<a href="https://imalexis.github.io/blog/suspense/react-suspense#displaying-a-fallback-while-content-is-loading" class="hash-link" aria-label="Direct link to Displaying a fallback while content is loading" title="Direct link to Displaying a fallback while content is loading">​</a></h3>
<div class="language-js codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-js codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token operator" style="color:#393A34">&lt;</span><span class="token maybe-class-name">Suspense</span><span class="token plain"> fallback</span><span class="token operator" style="color:#393A34">=</span><span class="token punctuation" style="color:#393A34">{</span><span class="token operator" style="color:#393A34">&lt;</span><span class="token maybe-class-name">Loading</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">/</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token punctuation" style="color:#393A34">}</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token operator" style="color:#393A34">&lt;</span><span class="token maybe-class-name">Albums</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">/</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">&lt;</span><span class="token operator" style="color:#393A34">/</span><span class="token maybe-class-name">Suspense</span><span class="token operator" style="color:#393A34">&gt;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>React will display <span style="background-color:#2C6F63;border-radius:2px;border:1px solid black;color:#fff;padding:0.2rem">loading fallback</span>
until all the code and data needed by the children has been loaded.</p>
<p>Only Suspense-enable data sources will activate the <span style="background-color:#2C6F63;border-radius:2px;border:1px solid black;color:#fff;padding:0.2rem">Suspense component</span>.</p>
<ol>
<li>Data fetching with Suspense-enabled frameworks like <span style="background-color:#2C6F63;border-radius:2px;border:1px solid black;color:#fff;padding:0.2rem">Relay</span> and <span style="background-color:#2C6F63;border-radius:2px;border:1px solid black;color:#fff;padding:0.2rem">Next.js</span>, such as <span style="background-color:#2C6F63;border-radius:2px;border:1px solid black;color:#fff;padding:0.2rem">useLazyQuery</span> in <span style="background-color:#2C6F63;border-radius:2px;border:1px solid black;color:#fff;padding:0.2rem">Relay</span></li>
<li>Lazy-loading component code with <span style="background-color:#2C6F63;border-radius:2px;border:1px solid black;color:#fff;padding:0.2rem">lazy</span></li>
<li>Reading the value of a Promise with <span style="background-color:#2C6F63;border-radius:2px;border:1px solid black;color:#fff;padding:0.2rem">use</span></li>
</ol>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="revealing-content-together-at-once">Revealing content together at once<a href="https://imalexis.github.io/blog/suspense/react-suspense#revealing-content-together-at-once" class="hash-link" aria-label="Direct link to Revealing content together at once" title="Direct link to Revealing content together at once">​</a></h3>
<p>By default, the whole tree inside Suspense is treated as a single unit. Only all components inside the Suspense have been ready for rendering, all of those components will appear at once. Otherwise, even if only one of these components suspends waiting for some data, all of them together will be replaced by the loading indicator.</p>
<p><img loading="lazy" alt="Image" src="https://imalexis.github.io/assets/images/image-d8f1ab47a015ccd1ae121ab782b76520.png" width="1698" height="326" class="img_ev3q"></p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="revealing-nested-content-as-it-loads">Revealing nested content as it loads<a href="https://imalexis.github.io/blog/suspense/react-suspense#revealing-nested-content-as-it-loads" class="hash-link" aria-label="Direct link to Revealing nested content as it loads" title="Direct link to Revealing nested content as it loads">​</a></h3>
<p>Each Suspense boundary's fallback will be filled in as the next level of content becomes available.</p>
<p><img loading="lazy" alt="Image" src="https://imalexis.github.io/assets/images/image-1-86919027ee5d9a0b36f0fcf501dc2d3f.png" width="1710" height="442" class="img_ev3q"></p>
<p>With this change, displaying the <span style="background-color:#2C6F63;border-radius:2px;border:1px solid black;color:#fff;padding:0.2rem">Biography</span> doesn't need to "wait" for the <span style="background-color:#2C6F63;border-radius:2px;border:1px solid black;color:#fff;padding:0.2rem">Albums</span> to load.</p>
<span style="background-color:#2C6F63;border-radius:2px;border:1px solid black;color:#fff;padding:0.2rem">AlbumsGlimmer</span>
<p>Let's break it down with proper sequence:</p>
<ol>
<li>If <span style="background-color:#2C6F63;border-radius:2px;border:1px solid black;color:#fff;padding:0.2rem">Biography</span> hasn't loaded yet, <span style="background-color:#2C6F63;border-radius:2px;border:1px solid black;color:#fff;padding:0.2rem">BigSpinner</span> is shown in place of the entire content area.</li>
<li>Once the <span style="background-color:#2C6F63;border-radius:2px;border:1px solid black;color:#fff;padding:0.2rem">Biography</span> finishes loadingm <span style="background-color:#2C6F63;border-radius:2px;border:1px solid black;color:#fff;padding:0.2rem">BigSpinner</span> is replaced by the content.</li>
<li>If <span style="background-color:#2C6F63;border-radius:2px;border:1px solid black;color:#fff;padding:0.2rem">Albums</span> hasn't loaded yet, <span style="background-color:#2C6F63;border-radius:2px;border:1px solid black;color:#fff;padding:0.2rem">AlbumsGlimmer</span> id shown in place of <span style="background-color:#2C6F63;border-radius:2px;border:1px solid black;color:#fff;padding:0.2rem">Albums</span> and its parent Panel.</li>
<li>Finally, once <span style="background-color:#2C6F63;border-radius:2px;border:1px solid black;color:#fff;padding:0.2rem">Albums</span> finishes loading, it replaces <span style="background-color:#2C6F63;border-radius:2px;border:1px solid black;color:#fff;padding:0.2rem">AlbumsGlimmer</span>.</li>
</ol>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="more-usage-see-at-react-suspense">More usage see at <a href="https://react.dev/reference/react/Suspense" target="_blank" rel="noopener noreferrer">react &lt;Suspense&gt;</a><a href="https://imalexis.github.io/blog/suspense/react-suspense#more-usage-see-at-react-suspense" class="hash-link" aria-label="Direct link to more-usage-see-at-react-suspense" title="Direct link to more-usage-see-at-react-suspense">​</a></h3>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[applications-of-heap]]></title>
            <link>https://imalexis.github.io/blog/applications-of-heap</link>
            <guid>https://imalexis.github.io/blog/applications-of-heap</guid>
            <pubDate>Tue, 09 Jan 2024 15:47:15 GMT</pubDate>
            <description><![CDATA[---]]></description>
            <content:encoded><![CDATA[<hr>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="slug-heap-applicationtitle-applications-of-heaptags-data-structure-heap">slug: heap-application
title: Applications of Heap
tags: [data structure, heap]<a href="https://imalexis.github.io/blog/applications-of-heap#slug-heap-applicationtitle-applications-of-heaptags-data-structure-heap" class="hash-link" aria-label="Direct link to slug: heap-application
title: Applications of Heap
tags: [data structure, heap]" title="Direct link to slug: heap-application
title: Applications of Heap
tags: [data structure, heap]">​</a></h2>
<p>leetcode natively supports JS PQs, including a Min one.</p>
<p><a href="https://github.com/datastructures-js/priority-queue" target="_blank" rel="noopener noreferrer">github datastructures - priority queue</a></p>
<p><a href="https://support.leetcode.com/hc/en-us/articles/360011833974-What-are-the-environments-for-the-programming-languages-" target="_blank" rel="noopener noreferrer">github leetcode - environment for the programming languages</a></p>
<div class="tabs-container tabList__CuJ"><ul role="tablist" aria-orientation="horizontal" class="tabs"><li role="tab" tabindex="0" aria-selected="true" class="tabs__item tabItem_LNqP tabs__item--active">The Top K Problem</li><li role="tab" tabindex="-1" aria-selected="false" class="tabs__item tabItem_LNqP">--</li></ul><div class="margin-top--md"><div role="tabpanel" class="tabItem_Ymn6"><p>Use the Heap data structure to obtain Top K’s largest or smallest elements.</p><p>Solution of the Top K largest elements:</p><ol>
<li>Construct a Max Heap.</li>
<li>Add all elements into the Max Heap.</li>
<li>Traversing and deleting the top element, and store the value into the result arry T.</li>
<li>Repeat step 3 until we have removed the K largest elements.</li>
</ol><p>Solution of the Top K smalllest elements</p><ol>
<li>Construct a Min Heap</li>
<li>Add all elements into the Min Heap</li>
<li>Traversing and deleing the top element, and store the value into the result array T.</li>
<li>Repeat step 3 until we have removed the K smallest elements.</li>
</ol><p>Time Complexity: O(KlogN + N)
Space complexity: O(N)</p></div><div role="tabpanel" class="tabItem_Ymn6" hidden=""><p>hello orange</p></div></div></div>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[js]]></title>
            <link>https://imalexis.github.io/blog/js</link>
            <guid>https://imalexis.github.io/blog/js</guid>
            <pubDate>Tue, 09 Jan 2024 15:47:15 GMT</pubDate>
            <description><![CDATA[JS reference]]></description>
            <content:encoded><![CDATA[<p>JS reference</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="mapprototypeentries-vs-objectentries">Map.prototype.entries() VS Object.entries()<a href="https://imalexis.github.io/blog/js#mapprototypeentries-vs-objectentries" class="hash-link" aria-label="Direct link to Map.prototype.entries() VS Object.entries()" title="Direct link to Map.prototype.entries() VS Object.entries()">​</a></h2>
<p>Object.entries()
The Object.entries() static method returns an array of a given object's own enumerable string-keyed property key-value pairs.</p>
<p>The entries() method of Map instances returns a new map iterator object that contains the [key, value] pairs for each element in this map in insertion order.</p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[usePaginationFragment]]></title>
            <link>https://imalexis.github.io/blog/use-pagination-fragment</link>
            <guid>https://imalexis.github.io/blog/use-pagination-fragment</guid>
            <pubDate>Tue, 09 Jan 2024 15:47:15 GMT</pubDate>
            <description><![CDATA[usePaginationFragment is a hook provided by Relay, a JavaScriptframework for building data-driven React applications with GraphQL.]]></description>
            <content:encoded><![CDATA[<p>usePaginationFragment is a hook provided by Relay, a JavaScriptframework for building data-driven React applications with GraphQL.</p>
<p>This hook is specially designed for working with paginated data.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="what-is-a-pagination-fragment">What is a Pagination Fragment<a href="https://imalexis.github.io/blog/use-pagination-fragment#what-is-a-pagination-fragment" class="hash-link" aria-label="Direct link to What is a Pagination Fragment" title="Direct link to What is a Pagination Fragment">​</a></h2>
<p>A pagination fragment in Relay is a way to define a part of a GraphQL query that deals with a list of items taht can be paginated.
This means it you can fetch a subset of items initially and then load more items as needs(e.g., when a  user scroll to the bottom of a list)</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="arguments">Arguments<a href="https://imalexis.github.io/blog/use-pagination-fragment#arguments" class="hash-link" aria-label="Direct link to Arguments" title="Direct link to Arguments">​</a></h2>
<ul>
<li>fragment</li>
<li>fragmentReference(fragmentKey)</li>
</ul>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="return-value">Return Value<a href="https://imalexis.github.io/blog/use-pagination-fragment#return-value" class="hash-link" aria-label="Direct link to Return Value" title="Direct link to Return Value">​</a></h2>
<ul>
<li>data</li>
<li>isLoadingNext</li>
<li>isLoadingPrevious</li>
<li>hasNext</li>
<li>hasPrevious</li>
<li>loadNext</li>
<li>loadPrevious</li>
<li>refetch</li>
</ul>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="to-make-usepaginationfragment-work">To make "usePaginationFragment" work<a href="https://imalexis.github.io/blog/use-pagination-fragment#to-make-usepaginationfragment-work" class="hash-link" aria-label="Direct link to To make &quot;usePaginationFragment&quot; work" title="Direct link to To make &quot;usePaginationFragment&quot; work">​</a></h2>
<ol>
<li>
<p>Fragment Definition: Start by defining a GraphQL fragment on the type that represents your list of items. This fragment includes fields you want to fetch for each item and a connection for pagination.</p>
</li>
<li>
<p>Hook Usage: Use the "usePaginationFragment" hook. This hook takes 2 arguments:</p>
<ul>
<li>
<p>The FraphQL fragment you define. (fragment)</p>
</li>
<li>
<p>The data from the parent query or fragment that contains the connection(fragmentKey).
The fragment reference(fragmentKey) is an opaque Relay object that Relay uses to read the data for the fragment from the store; more specifically, it contains information about which particular object instance the data should be read from.</p>
<p>The type of the fragment reference can be imported from the generated Flow types, from the file <code>fragment_name</code>.graphql.js , and can be used to declare the type of your Props. The name of the fragment reference type will be: <code>fragment_name</code>$key.</p>
</li>
</ul>
</li>
<li>
<p>Fetching More Data: The hook provides methods to fetch more items (e.g., loadNext, loadNext). When you call these methods, Relay will automatically make a GraphQL query to fetch the next or previous set of items.</p>
</li>
<li>
<p>Handling Data and State: The hook also provides the current data and state of the pagination(e.g., hasNext, isLoadingPrevious, isLoadingNext)</p>
</li>
</ol>]]></content:encoded>
            <category>Relay</category>
            <category>GraphQL</category>
        </item>
        <item>
            <title><![CDATA[Implemenation of a Heap]]></title>
            <link>https://imalexis.github.io/blog/heap</link>
            <guid>https://imalexis.github.io/blog/heap</guid>
            <pubDate>Tue, 09 Jan 2024 15:47:15 GMT</pubDate>
            <description><![CDATA[This is my first post on Docusaurus.]]></description>
            <content:encoded><![CDATA[<h3 class="anchor anchorWithStickyNavbar_LWe7" id="min-heap">Min Heap<a href="https://imalexis.github.io/blog/heap#min-heap" class="hash-link" aria-label="Direct link to Min Heap" title="Direct link to Min Heap">​</a></h3>
<ol>
<li>Complete binary tree</li>
<li>Each node in the Heap has a value no larger than its child nodes. Therefore, the top element (root node) has the smallest value in the Heap.</li>
</ol>
<br>
<p>transform a binary tree into an array</p>
<p><img loading="lazy" alt="Tree To Array" src="https://imalexis.github.io/assets/images/TreeToArray-b0eb5c06de60ce8a5e9fbd613b8d9102.png" width="838" height="575" class="img_ev3q"></p>
<div class="language-js codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-js codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">// Implementing "Min Heap"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">public</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">class</span><span class="token plain"> </span><span class="token class-name">MinHeap</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">// Create a complete binary tree using an array</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">// Then use the binary tree to construct a Heap</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    int</span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> minHeap</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">// the number of elements is needed when instantiating an array</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">// heapSize records the size of the array</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    int heapSize</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">// realSize records the number of elements in the Heap</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    int realSize </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">public</span><span class="token plain"> </span><span class="token function maybe-class-name" style="color:#d73a49">MinHeap</span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter">int heapSize</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">heapSize</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> heapSize</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        minHeap </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">new</span><span class="token plain"> </span><span class="token class-name">int</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">heapSize </span><span class="token operator" style="color:#393A34">+</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token comment" style="color:#999988;font-style:italic">// To better track the indices of the binary tree, </span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token comment" style="color:#999988;font-style:italic">// we will not use the 0-th element in the array</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token comment" style="color:#999988;font-style:italic">// You can fill it with any value</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        minHeap</span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">// Function to add an element</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">public</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">void</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">add</span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter">int element</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        realSize</span><span class="token operator" style="color:#393A34">++</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token comment" style="color:#999988;font-style:italic">// If the number of elements in the Heap exceeds the preset heapSize</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token comment" style="color:#999988;font-style:italic">// print "Added too many elements" and return</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword control-flow" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">realSize </span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> heapSize</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token maybe-class-name">System</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">out</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">println</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"Added too many elements!"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            realSize</span><span class="token operator" style="color:#393A34">--</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token keyword control-flow" style="color:#00009f">return</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token comment" style="color:#999988;font-style:italic">// Add the element into the array</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        minHeap</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">realSize</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> element</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token comment" style="color:#999988;font-style:italic">// Index of the newly added element</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        int index </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> realSize</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token comment" style="color:#999988;font-style:italic">// Parent node of the newly added element</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token comment" style="color:#999988;font-style:italic">// Note if we use an array to represent the complete binary tree</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token comment" style="color:#999988;font-style:italic">// and store the root node at index 1</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token comment" style="color:#999988;font-style:italic">// index of the parent node of any node is [index of the node / 2]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token comment" style="color:#999988;font-style:italic">// index of the left child node is [index of the node * 2]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token comment" style="color:#999988;font-style:italic">// index of the right child node is [index of the node * 2 + 1]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        int parent </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> index </span><span class="token operator" style="color:#393A34">/</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">2</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token comment" style="color:#999988;font-style:italic">// If the newly added element is smaller than its parent node,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token comment" style="color:#999988;font-style:italic">// its value will be exchanged with that of the parent node </span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword control-flow" style="color:#00009f">while</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"> minHeap</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">index</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">&lt;</span><span class="token plain"> minHeap</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">parent</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">&amp;&amp;</span><span class="token plain"> index </span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            int temp </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> minHeap</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">index</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            minHeap</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">index</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> minHeap</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">parent</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            minHeap</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">parent</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> temp</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            index </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> parent</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            parent </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> index </span><span class="token operator" style="color:#393A34">/</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">2</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">// Get the top element of the Heap</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">public</span><span class="token plain"> int </span><span class="token function" style="color:#d73a49">peek</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword control-flow" style="color:#00009f">return</span><span class="token plain"> minHeap</span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">// Delete the top element of the Heap</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">public</span><span class="token plain"> int </span><span class="token function" style="color:#d73a49">pop</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token comment" style="color:#999988;font-style:italic">// If the number of elements in the current Heap is 0,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token comment" style="color:#999988;font-style:italic">// print "Don't have any elements" and return a default value</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword control-flow" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">realSize </span><span class="token operator" style="color:#393A34">&lt;</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token maybe-class-name">System</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">out</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">println</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"Don't have any element!"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token keyword control-flow" style="color:#00009f">return</span><span class="token plain"> </span><span class="token maybe-class-name">Integer</span><span class="token punctuation" style="color:#393A34">.</span><span class="token constant" style="color:#36acaa">MAX_VALUE</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword control-flow" style="color:#00009f">else</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token comment" style="color:#999988;font-style:italic">// When there are still elements in the Heap</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token comment" style="color:#999988;font-style:italic">// realSize &gt;= 1</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            int removeElement </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> minHeap</span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token comment" style="color:#999988;font-style:italic">// Put the last element in the Heap to the top of Heap</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            minHeap</span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> minHeap</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">realSize</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            realSize</span><span class="token operator" style="color:#393A34">--</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            int index </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token comment" style="color:#999988;font-style:italic">// When the deleted element is not a leaf node</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token keyword control-flow" style="color:#00009f">while</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">index </span><span class="token operator" style="color:#393A34">&lt;=</span><span class="token plain"> realSize </span><span class="token operator" style="color:#393A34">/</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">2</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                </span><span class="token comment" style="color:#999988;font-style:italic">// the left child of the deleted element</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                int left </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> index </span><span class="token operator" style="color:#393A34">*</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">2</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                </span><span class="token comment" style="color:#999988;font-style:italic">// the right child of the deleted element</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                int right </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">index </span><span class="token operator" style="color:#393A34">*</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">2</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">+</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                </span><span class="token comment" style="color:#999988;font-style:italic">// If the deleted element is larger than the left or right child</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                </span><span class="token comment" style="color:#999988;font-style:italic">// its value needs to be exchanged with the smaller value</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                </span><span class="token comment" style="color:#999988;font-style:italic">// of the left and right child</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                </span><span class="token keyword control-flow" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">minHeap</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">index</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> minHeap</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">left</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">||</span><span class="token plain"> minHeap</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">index</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> minHeap</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">right</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    </span><span class="token keyword control-flow" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">minHeap</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">left</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">&lt;</span><span class="token plain"> minHeap</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">right</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        int temp </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> minHeap</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">left</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        minHeap</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">left</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> minHeap</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">index</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        minHeap</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">index</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> temp</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        index </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> left</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword control-flow" style="color:#00009f">else</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        </span><span class="token comment" style="color:#999988;font-style:italic">// maxHeap[left] &gt;= maxHeap[right]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        int temp </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> minHeap</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">right</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        minHeap</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">right</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> minHeap</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">index</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        minHeap</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">index</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> temp</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        index </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> right</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword control-flow" style="color:#00009f">else</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    </span><span class="token keyword control-flow" style="color:#00009f">break</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token keyword control-flow" style="color:#00009f">return</span><span class="token plain"> removeElement</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">// return the number of elements in the Heap</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">public</span><span class="token plain"> int </span><span class="token function" style="color:#d73a49">size</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword control-flow" style="color:#00009f">return</span><span class="token plain"> realSize</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">public</span><span class="token plain"> </span><span class="token known-class-name class-name">String</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">toString</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword control-flow" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">realSize </span><span class="token operator" style="color:#393A34">==</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token keyword control-flow" style="color:#00009f">return</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"No element!"</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword control-flow" style="color:#00009f">else</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token maybe-class-name">StringBuilder</span><span class="token plain"> sb </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">new</span><span class="token plain"> </span><span class="token class-name">StringBuilder</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            sb</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">append</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'['</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token keyword control-flow" style="color:#00009f">for</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">int i </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> i </span><span class="token operator" style="color:#393A34">&lt;=</span><span class="token plain"> realSize</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> i</span><span class="token operator" style="color:#393A34">++</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                sb</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">append</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">minHeap</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">i</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                sb</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">append</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">','</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            sb</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">deleteCharAt</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">sb</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">length</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">-</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            sb</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">append</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">']'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token keyword control-flow" style="color:#00009f">return</span><span class="token plain"> sb</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">toString</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">public</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">static</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">void</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">main</span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter known-class-name class-name">String</span><span class="token parameter punctuation" style="color:#393A34">[</span><span class="token parameter punctuation" style="color:#393A34">]</span><span class="token parameter"> args</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token comment" style="color:#999988;font-style:italic">// Test case</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token maybe-class-name">MinHeap</span><span class="token plain"> minHeap </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">new</span><span class="token plain"> </span><span class="token class-name">MinHeap</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">3</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        minHeap</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">add</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">3</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        minHeap</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">add</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        minHeap</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">add</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">2</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token comment" style="color:#999988;font-style:italic">// [1,3,2]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token maybe-class-name">System</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">out</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">println</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">minHeap</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">toString</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token comment" style="color:#999988;font-style:italic">// 1</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token maybe-class-name">System</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">out</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">println</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">minHeap</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">peek</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token comment" style="color:#999988;font-style:italic">// 1</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token maybe-class-name">System</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">out</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">println</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">minHeap</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">pop</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token comment" style="color:#999988;font-style:italic">// [2, 3]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token maybe-class-name">System</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">out</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">println</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">minHeap</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">toString</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        minHeap</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">add</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">4</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token comment" style="color:#999988;font-style:italic">// Add too many elements</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        minHeap</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">add</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">5</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token comment" style="color:#999988;font-style:italic">// [2,3,4]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token maybe-class-name">System</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">out</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">println</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">minHeap</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">toString</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>]]></content:encoded>
            <category>data structure</category>
        </item>
        <item>
            <title><![CDATA[applications-of-heap]]></title>
            <link>https://imalexis.github.io/blog/2024/01/08/applications-of-heap</link>
            <guid>https://imalexis.github.io/blog/2024/01/08/applications-of-heap</guid>
            <pubDate>Mon, 08 Jan 2024 00:00:00 GMT</pubDate>
            <description><![CDATA[---]]></description>
            <content:encoded><![CDATA[<hr>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="slug-heap-applicationtitle-applications-of-heaptags-data-structure-heap">slug: heap-application
title: Applications of Heap
tags: [data structure, heap]<a href="https://imalexis.github.io/blog/2024/01/08/applications-of-heap#slug-heap-applicationtitle-applications-of-heaptags-data-structure-heap" class="hash-link" aria-label="Direct link to slug: heap-application
title: Applications of Heap
tags: [data structure, heap]" title="Direct link to slug: heap-application
title: Applications of Heap
tags: [data structure, heap]">​</a></h2>
<p>leetcode natively supports JS PQs, including a Min one.</p>
<p><a href="https://github.com/datastructures-js/priority-queue" target="_blank" rel="noopener noreferrer">github datastructures - priority queue</a></p>
<p><a href="https://support.leetcode.com/hc/en-us/articles/360011833974-What-are-the-environments-for-the-programming-languages-" target="_blank" rel="noopener noreferrer">github leetcode - environment for the programming languages</a></p>
<div class="tabs-container tabList__CuJ"><ul role="tablist" aria-orientation="horizontal" class="tabs"><li role="tab" tabindex="0" aria-selected="true" class="tabs__item tabItem_LNqP tabs__item--active">The Top K Problem</li><li role="tab" tabindex="-1" aria-selected="false" class="tabs__item tabItem_LNqP">--</li></ul><div class="margin-top--md"><div role="tabpanel" class="tabItem_Ymn6"><p>Use the Heap data structure to obtain Top K’s largest or smallest elements.</p><p>Solution of the Top K largest elements:</p><ol>
<li>Construct a Max Heap.</li>
<li>Add all elements into the Max Heap.</li>
<li>Traversing and deleting the top element, and store the value into the result arry T.</li>
<li>Repeat step 3 until we have removed the K largest elements.</li>
</ol><p>Solution of the Top K smalllest elements</p><ol>
<li>Construct a Min Heap</li>
<li>Add all elements into the Min Heap</li>
<li>Traversing and deleing the top element, and store the value into the result array T.</li>
<li>Repeat step 3 until we have removed the K smallest elements.</li>
</ol><p>Time Complexity: O(KlogN + N)
Space complexity: O(N)</p></div><div role="tabpanel" class="tabItem_Ymn6" hidden=""><p>hello orange</p></div></div></div>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Fragments]]></title>
            <link>https://imalexis.github.io/blog/relay-fragment</link>
            <guid>https://imalexis.github.io/blog/relay-fragment</guid>
            <pubDate>Fri, 05 Jan 2024 00:00:00 GMT</pubDate>
            <description><![CDATA[In Relay, GraphQL Fragments serve as the main building block for declaring data dependencies for React Components. Fragments in GraphQL are reusable units that define a set of fields to be queried from a GraphQL type. These fragments allow us to specify the data requirements for a particular part of our application, making queries more modular and maintainable.]]></description>
            <content:encoded><![CDATA[<p>In Relay, GraphQL Fragments serve as the main building block for declaring data dependencies for React Components. Fragments in GraphQL are reusable units that define a set of fields to be queried from a GraphQL type. These fragments allow us to specify the data requirements for a particular part of our application, making queries more modular and maintainable.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="key-concepts">key Concepts<a href="https://imalexis.github.io/blog/relay-fragment#key-concepts" class="hash-link" aria-label="Direct link to key Concepts" title="Direct link to key Concepts">​</a></h2>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="graphql-fragments">GraphQL Fragments<a href="https://imalexis.github.io/blog/relay-fragment#graphql-fragments" class="hash-link" aria-label="Direct link to GraphQL Fragments" title="Direct link to GraphQL Fragments">​</a></h3>
<ul>
<li>A GraphQL Fragment is a named set of fields on a GraphQL type. It is  a way to define a subset of the fields that we want to query on a particular GraphQL type.</li>
<li>Fragments allow us to modularize queries and reuse them across multiple components. For example, when different components share similar data requirements.</li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="data-dependencies-in-relay-components">Data Dependencies in Relay Components<a href="https://imalexis.github.io/blog/relay-fragment#data-dependencies-in-relay-components" class="hash-link" aria-label="Direct link to Data Dependencies in Relay Components" title="Direct link to Data Dependencies in Relay Components">​</a></h3>
<p>ToDo</p>]]></content:encoded>
            <category>React</category>
            <category>Relay</category>
            <category>GraphQl</category>
        </item>
        <item>
            <title><![CDATA[MDX Blog Post]]></title>
            <link>https://imalexis.github.io/blog/mdx-blog-post</link>
            <guid>https://imalexis.github.io/blog/mdx-blog-post</guid>
            <pubDate>Sun, 01 Aug 2021 00:00:00 GMT</pubDate>
            <description><![CDATA[Blog posts support Docusaurus Markdown features, such as MDX.]]></description>
            <content:encoded><![CDATA[<p>Blog posts support <a href="https://docusaurus.io/docs/markdown-features" target="_blank" rel="noopener noreferrer">Docusaurus Markdown features</a>, such as <a href="https://mdxjs.com/" target="_blank" rel="noopener noreferrer">MDX</a>.</p>
<div class="theme-admonition theme-admonition-tip admonition_xJq3 alert alert--success"><div class="admonitionHeading_Gvgb"><span class="admonitionIcon_Rf37"><svg viewBox="0 0 12 16"><path fill-rule="evenodd" d="M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"></path></svg></span>tip</div><div class="admonitionContent_BuS1"><p>Use the power of React to create interactive blog posts.</p><div class="language-js codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-js codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token operator" style="color:#393A34">&lt;</span><span class="token plain">button onClick</span><span class="token operator" style="color:#393A34">=</span><span class="token punctuation" style="color:#393A34">{</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token arrow operator" style="color:#393A34">=&gt;</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">alert</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'button clicked!'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">}</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token maybe-class-name">Click</span><span class="token plain"> me</span><span class="token operator" style="color:#393A34">!</span><span class="token operator" style="color:#393A34">&lt;</span><span class="token operator" style="color:#393A34">/</span><span class="token plain">button</span><span class="token operator" style="color:#393A34">&gt;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><button>Click me!</button></div></div>]]></content:encoded>
            <category>docusaurus</category>
        </item>
        <item>
            <title><![CDATA[Long Blog Post]]></title>
            <link>https://imalexis.github.io/blog/long-blog-post</link>
            <guid>https://imalexis.github.io/blog/long-blog-post</guid>
            <pubDate>Wed, 29 May 2019 00:00:00 GMT</pubDate>
            <description><![CDATA[This is the summary of a very long blog post,]]></description>
            <content:encoded><![CDATA[<p>This is the summary of a very long blog post,</p>
<p>Use a <code>&lt;!--</code> <code>truncate</code> <code>--&gt;</code> comment to limit blog post size in the list view.</p>
<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet</p>
<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet</p>
<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet</p>
<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet</p>
<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet</p>
<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet</p>
<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet</p>
<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet</p>
<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet</p>
<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet</p>
<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet</p>
<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet</p>
<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet</p>
<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet</p>
<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet</p>
<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet</p>]]></content:encoded>
            <category>hello</category>
            <category>docusaurus</category>
        </item>
        <item>
            <title><![CDATA[First Blog Post]]></title>
            <link>https://imalexis.github.io/blog/first-blog-post</link>
            <guid>https://imalexis.github.io/blog/first-blog-post</guid>
            <pubDate>Tue, 28 May 2019 00:00:00 GMT</pubDate>
            <description><![CDATA[Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet]]></description>
            <content:encoded><![CDATA[<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet</p>
<mark>Marked text 1</mark>]]></content:encoded>
            <category>hola</category>
            <category>docusaurus</category>
        </item>
    </channel>
</rss>