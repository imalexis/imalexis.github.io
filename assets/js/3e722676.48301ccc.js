"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[9590],{8594:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>u,frontMatter:()=>r,metadata:()=>l,toc:()=>c});var n=a(5893),i=a(1151);const r={slug:"relay-mutation",title:"Relay - Mutation",tags:["graphql","Relay"]},o=void 0,l={permalink:"/blog/relay-mutation",editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/blog/mutation.mdx",source:"@site/blog/mutation.mdx",title:"Relay - Mutation",description:"general steps for creating a new object using Relay Mutations:",date:"2024-01-09T15:49:03.539Z",formattedDate:"January 9, 2024",tags:[{label:"graphql",permalink:"/blog/tags/graphql"},{label:"Relay",permalink:"/blog/tags/relay"}],readingTime:1.985,hasTruncateMarker:!0,authors:[],frontMatter:{slug:"relay-mutation",title:"Relay - Mutation",tags:["graphql","Relay"]},unlisted:!1,nextItem:{title:"react-suspense",permalink:"/blog/react-suspense"}},s={authorsImageUrls:[]},c=[{value:"1. Define a GraphQL Mutation",id:"1-define-a-graphql-mutation",level:3},{value:"2. Create a Relay Mutation",id:"2-create-a-relay-mutation",level:3},{value:"3. invoke commit",id:"3-invoke-commit",level:3}];function p(e){const t={admonition:"admonition",code:"code",h3:"h3",p:"p",pre:"pre",...(0,i.a)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.p,{children:"general steps for creating a new object using Relay Mutations:"}),"\n",(0,n.jsx)(t.h3,{id:"1-define-a-graphql-mutation",children:"1. Define a GraphQL Mutation"}),"\n",(0,n.jsx)(t.p,{children:"Create a GraphQL mutation that represents the action of creating a new object. This mutation should include input fields representing the data needed to create the object."}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-js",children:"   // Example GraphQL mutation\n\nconst mutation = graphql`\n    mutation ObjectMutation($input: CreateObjectInput!) {\n    createObject(input: $input) {\n    object {\n      id\n      name\n      // other fields\n    }\n  }\n}\n` \n"})}),"\n",(0,n.jsx)(t.h3,{id:"2-create-a-relay-mutation",children:"2. Create a Relay Mutation"}),"\n",(0,n.jsx)(t.p,{children:"creare the commit method"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-js",children:"const [commit] = useMutation<CreateObjectMutation>(mutation);\n"})}),"\n",(0,n.jsx)(t.p,{children:"CreateObjectMutation: the type of mutation"}),"\n",(0,n.jsx)(t.p,{children:"mutation: the definition of mutation"}),"\n",(0,n.jsx)("br",{}),"\n",(0,n.jsx)(t.h3,{id:"3-invoke-commit",children:"3. invoke commit"}),"\n",(0,n.jsx)(t.p,{children:'the new object to be create should be place in the "input" property of "variable". "variable" is a property of the big Object we commit.'}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-js",children:'<Button\n        type="primary"\n        onClick={() =>\n          commit({\n            variables: { input: { createdBy: 1, name: title } },\n            onCompleted: (response, errors) => {\n              navigate("/admin/forms");\n            },\n          })\n        }\n/>\n'})}),"\n",(0,n.jsxs)(t.admonition,{type:"tip",children:[(0,n.jsx)(t.p,{children:"When developing a React app with Relay, you often use the babel-plugin-relay/macro package to enable the graphql template literal tag for your GraphQL queries. This allows you to embed GraphQL queries directly into your JavaScript or TypeScript files."}),(0,n.jsx)(t.p,{children:"In Relay applications, when using the babel-plugin-relay/macro, you import the graphql template tag from the babel-plugin-relay/macro package instead of the generic graphql package. This is because the graphql template tag provided by babel-plugin-relay/macro is a special version tailored for Relay's use and is capable of performing ahead-of-time (AOT) compilation."}),(0,n.jsxs)(t.p,{children:["When you use ",(0,n.jsx)(t.code,{children:'import { graphql } from "babel-plugin-relay/macro";'}),", the Babel plugin processes the GraphQL queries at build time, generating optimized artifacts that are used by Relay to make more efficient GraphQL requests."]}),(0,n.jsx)(t.p,{children:"By using the babel-plugin-relay/macro, you get the benefits of AOT compilation, which includes:"}),(0,n.jsx)(t.p,{children:"Faster Runtime: The Relay compiler processes the queries at build time, so the runtime environment doesn't need to perform complex parsing and transformations on GraphQL queries."}),(0,n.jsx)(t.p,{children:"Smaller Bundle Sizes: AOT compilation allows the Relay compiler to generate optimized artifacts, resulting in smaller bundle sizes for your application."}),(0,n.jsx)(t.p,{children:"Static Validation: Queries are statically validated during the build process, catching errors early in development rather than at runtime."}),(0,n.jsx)(t.p,{children:"Using the generic graphql package wouldn't provide these benefits, as it doesn't have the Relay-specific optimizations implemented by the babel-plugin-relay/macro. Therefore, when working with Relay, it's recommended to import graphql from babel-plugin-relay/macro for an improved development and runtime experience."})]})]})}function u(e={}){const{wrapper:t}={...(0,i.a)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(p,{...e})}):p(e)}},1151:(e,t,a)=>{a.d(t,{Z:()=>l,a:()=>o});var n=a(7294);const i={},r=n.createContext(i);function o(e){const t=n.useContext(r);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),n.createElement(r.Provider,{value:t},e.children)}}}]);