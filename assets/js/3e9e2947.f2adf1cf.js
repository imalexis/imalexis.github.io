"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[3733],{1711:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>d,frontMatter:()=>r,metadata:()=>i,toc:()=>l});var a=n(5893),s=n(1151);const r={slug:"programming-concepts-ExPreStmt",title:"Fundamental Concepts in Programming - Expressions, Predicates, and Statement",tags:["programming-concepts"]},o=void 0,i={permalink:"/blog/programming-concepts-ExPreStmt",editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/blog/programming-concepts-ExPredStmt.md",source:"@site/blog/programming-concepts-ExPredStmt.md",title:"Fundamental Concepts in Programming - Expressions, Predicates, and Statement",description:'In computer science language, "expression," "predicate," and "statement" are terms often used to describe different constructs in programming languages. Here\'s a brief explanation of each:',date:"2024-02-01T05:29:20.272Z",formattedDate:"February 1, 2024",tags:[{label:"programming-concepts",permalink:"/blog/tags/programming-concepts"}],readingTime:1.29,hasTruncateMarker:!1,authors:[],frontMatter:{slug:"programming-concepts-ExPreStmt",title:"Fundamental Concepts in Programming - Expressions, Predicates, and Statement",tags:["programming-concepts"]},unlisted:!1,nextItem:{title:"JavaScript Algorithmic Mastery:Quick and Essential Syntax for Problem Solving",permalink:"/blog/JS-algorithmic-mastery"}},c={authorsImageUrls:[]},l=[{value:"Expression:",id:"expression",level:2},{value:"Predicate:",id:"predicate",level:2},{value:"Statement:",id:"statement",level:2}];function m(e){const t={code:"code",h2:"h2",p:"p",strong:"strong",...(0,s.a)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.p,{children:'In computer science language, "expression," "predicate," and "statement" are terms often used to describe different constructs in programming languages. Here\'s a brief explanation of each:'}),"\n",(0,a.jsx)(t.h2,{id:"expression",children:"Expression:"}),"\n",(0,a.jsxs)(t.p,{children:["An expression is a combination of values, variables, operators, and function calls that can be evaluated to ",(0,a.jsx)(t.strong,{children:"produce a single value"}),".\nExpressions can be simple, like a literal value or a variable, or complex, involving arithmetic or logical operations.\nExamples: ",(0,a.jsx)(t.code,{children:"5 + 3"}),", ",(0,a.jsx)(t.code,{children:"x * y"}),", ",(0,a.jsx)(t.code,{children:"isReady && hasPermission"}),",",(0,a.jsx)(t.code,{children:" Math.sqrt(16)"}),"."]}),"\n",(0,a.jsx)(t.h2,{id:"predicate",children:"Predicate:"}),"\n",(0,a.jsxs)(t.p,{children:["A predicate is **a specific type of expression ** that ",(0,a.jsx)(t.strong,{children:"evaluates to either true or false"}),' (also produce a single value).\nPredicates are commonly used in conditional statements and loops to make decisions based on whether a condition is true or false.\nExamples: x > 0 (evaluates to true or false based on whether x is greater than 0), isReady && hasPermission, name === "John".']}),"\n",(0,a.jsx)(t.h2,{id:"statement",children:"Statement:"}),"\n",(0,a.jsxs)(t.p,{children:["A statement is a complete instruction that performs a specific action.\nUnlike expressions, ",(0,a.jsx)(t.strong,{children:"statements don't necessarily produce a value"}),". They are executed for their side effects.\nExamples: variable declarations (let x = 5;), control flow statements (if, else, for, while), function declarations (function myFunction() ",")."]}),"\n",(0,a.jsx)(t.p,{children:"an expression is a combination of values and operators that evaluates to a single value, a predicate is a specific type of expression that evaluates to true or false, and a statement is a complete instruction that performs an action. In many programming languages, expressions can be used as part of statements, and predicates are often used to control the flow of statements."})]})}function d(e={}){const{wrapper:t}={...(0,s.a)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(m,{...e})}):m(e)}},1151:(e,t,n)=>{n.d(t,{Z:()=>i,a:()=>o});var a=n(7294);const s={},r=a.createContext(s);function o(e){const t=a.useContext(r);return a.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),a.createElement(r.Provider,{value:t},e.children)}}}]);